
<div class="panel panel-default" id="ppuDiv">
    <div class="panel-heading">CPU Usage</div>
    <div class="panel-body">
        <div id="cpuChart" style="width:600px;height:300px"></div>
    </div>
</div>


<script src="~/Scripts/Dashboard/flot/jquery.flot.js"></script>
<script src="~/Scripts/Dashboard/flot/jquery.flot.time.js"></script>
<script>
    $(function() {

        var container = $("#cpuChart");

    //var maximum = container.outerWidth() / 2 || 300;

    //var data = [];

    function getCpuInformation() {


        //if (data.length) {
        //    data = data.slice(1);
        //}

        //while (data.length < maximum) {
        //    var previous = data.length ? data[data.length - 1] : 50;
        //    var y = previous + Math.random() * 10 - 5;
        //    data.push(y < 0 ? 0 : y > 100 ? 100 : y);
        //}

        //// zip the generated y values with the x values

        //var res = [];
        //for (var i = 0; i < data.length; ++i) {
        //    res.push([i, data[i]])
        //}

        //return res;
        $.ajax("@Url.Action("GetCpu")").success(function (data) {
            return data;
        });
    }

    //

    series = [{
        data: getCpuInformation(),
        lines: {
            fill: true
        }
    }];

    //

    var plot = $.plot(container, series, {
        grid: {
            borderWidth: 1,
            minBorderMargin: 20,
            labelMargin: 10,
            backgroundColor: {
                colors: ["#fff", "#e4f4f4"]
            },
            margin: {
                top: 8,
                bottom: 20,
                left: 20
            },
            markings: function(axes) {
                var markings = [];
                var xaxis = axes.xaxis;
                for (var x = Math.floor(xaxis.min); x < xaxis.max; x += xaxis.tickSize * 2) {
                    markings.push({
                        xaxis: {
                            from: x,
                            to: x + xaxis.tickSize
                        },
                        color: "rgba(232, 232, 255, 0.2)"
                    });
                }
                return markings;
            }
        },
        xaxis: {
            mode: "time",
            tickSize: [1,"second"],
            tickFormatter: function(v, axis) {
                var date = new Date(v);

                if (date.getSeconds() % 20 == 0) {
                    var hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                    var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                    var seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                    return hours + ":" + minutes + ":" + seconds;
                } else {
                    return "";
                }
            },
            axisLabel: "Time"
        },
        yaxis: {
            min: 0,
            max: 100,
            tickFormatter: function (v, axis) {
                if (v % 10 == 0) {
                    return v + "%";
                } else {
                    return "";
                }
            },
            axisLabel: "CPU",
        },
        legend: {
            show: true
        }
    });

    // Update the random dataset at 25FPS for a smoothly-animating chart

    setInterval(function updateRandom() {
        series[0].data = getCpuInformation();
        plot.setData(series);
        plot.draw();
    }, 800);

});

</script>