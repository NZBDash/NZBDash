@using NZBDash.Resources
@using NZBDash.UI.Helpers
@model NZBDash.UI.Models.ViewModels.Settings.PlexSettingsViewModel


<div class="container-fluid">

    <div class="row row-offcanvas row-offcanvas-left">


        <div class="col-sm-9 col-md-10 main">
            @Html.RenderHeader(Resources.Settings_Plex_Title)

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                                @Html.CheckBoxFor(model => model.Enabled)
                                @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                          
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShowOnDashboard, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                                @Html.CheckBoxFor(model => model.ShowOnDashboard)
                                @Html.ValidationMessageFor(model => model.ShowOnDashboard, "", new { @class = "text-danger" })
                       
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IpAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IpAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IpAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Port, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-1">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>

                        <div class="col-md-1">
                            <input id="testPlexConnection" type="button" value="Test" class="btn btn-default testButton" />
                        </div>
                    </div>
                </div>
            }

        </div>

    </div>
</div>
@section Scripts {
    <script src="~/Scripts/ApplicationConfigurationSignalR.js"></script>
    <script src="~/Scripts/bootstrap-notify.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $('#Enabled').bootstrapSwitch();
        $('#ShowOnDashboard').bootstrapSwitch();
    });</script>
}